{"version":3,"sources":["Api.js","components/Searchbar/Searchbar.js","components/Movie/Movie.js","components/SearchResults/SearchResults.js","components/Banner/Banner.js","logo.svg","components/Footer/Footer.js","components/Nominee/Nominee.js","App.js","reportWebVitals.js","index.js"],"names":["fetchApiData","movieTitle","a","url","fetch","then","data","json","catch","err","Search","Searchbar","getApiData","setInputMovie","className","onSubmit","e","preventDefault","document","querySelector","value","placeholder","Movie","title","year","imdbID","addNominee","isNominated","movieInfo","onClick","bind","disabled","SearchResults","inputMovie","nominees","map","movieObj","indx","Title","Year","condensedMovieObj","forEach","nominee","JSON","stringify","displayMovies","Banner","src","logo","alt","Nominee","deleteNominee","App","useState","parse","localStorage","getItem","setNominees","setData","newData","newNominees","filter","nomineeObj","setItem","length","push","movie","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dff026bd.chunk.js","sourcesContent":["const BASE_URL = \"https://www.omdbapi.com/\";\nconst API_KEY = \"32300d09\";\n\nconst fetchApiData = async (movieTitle) => {\n  const url = `${BASE_URL}?apikey=${API_KEY}&s=${movieTitle}`;\n\n  const data = await fetch(url)\n    .then((data) => data.json())\n    .catch((err) => {\n      return err;\n    });\n\n  // Return the Searches resulted from the api\n  return data.Search;\n};\n\nexport default fetchApiData;\n","import React from \"react\";\nimport \"./SearchbarStyles.css\";\n\nconst Searchbar = ({ getApiData, setInputMovie }) => {\n  // This handle gets the value from the search bar and calls the api to get data\n  const onSubmitHandle = (e) => {\n    e.preventDefault();\n    const movieTitle = document.querySelector(\".search-bar\").value;\n    getApiData(movieTitle);\n    setInputMovie(movieTitle);\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <form onSubmit={onSubmitHandle}>\n        <h2 className=\"title\">Movie Search</h2>\n        <input className=\"search-bar\" placeholder=\"Enter a Movie Title\"></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import React from \"react\";\nimport \"./MovieStyles.css\";\n\nconst Movie = ({ title, year, imdbID, addNominee, isNominated }) => {\n  const movieInfo = { title, year, imdbID };\n\n  return (\n    <div className=\"movie-container\">\n      <p>\n        {title} ({year})\n      </p>\n\n      <button onClick={addNominee.bind(null, movieInfo)} disabled={isNominated}>\n        Nominate\n      </button>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\nimport Movie from \"../Movie/Movie.js\";\nimport \"./SearchResultsStyles.css\";\n\nconst SearchResults = ({ data, addNominee, inputMovie, nominees }) => {\n  // Displays the movies in the data\n\n  const displayMovies = (data) => {\n    // Map each of the movie within the data to its own Movie component\n    return data.map((movieObj, indx) => {\n      let { Title, Year, imdbID } = movieObj;\n      let condensedMovieObj = { title: Title, year: Year, imdbID: imdbID };\n      let isNominated = false;\n\n      nominees.forEach((nominee) => {\n        if (JSON.stringify(nominee) === JSON.stringify(condensedMovieObj)) {\n          isNominated = true;\n        }\n      });\n\n      return (\n        <Movie\n          key={indx}\n          title={Title}\n          year={Year}\n          imdbID={imdbID}\n          addNominee={addNominee}\n          isNominated={isNominated}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"results-container\">\n      <h2 className=\"title\">Results for \"{inputMovie}\"</h2>\n      {displayMovies(data)}\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport \"./BannerStyles.css\";\n\nconst Banner = () => {\n  return (\n    <div className=\"banner\">\n      <p>You have selected 5 movie nominations!</p>\n    </div>\n  );\n};\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport \"./FooterStyles.css\";\nimport logo from \"../../logo.svg\";\n\nexport default () => {\n  return (\n    <footer>\n      <p>developed by Aarya Patel with </p>\n      <img src={logo} alt=\"react logo\" />\n    </footer>\n  );\n};\n","import React from \"react\";\nimport \"./NomineeStyles.css\";\n\nconst Nominee = ({ title, year, imdbID, deleteNominee }) => {\n  const movieInfo = { title, year, imdbID };\n\n  return (\n    <div className=\"nominee-list\">\n      <p>\n        {title} ({year})\n      </p>\n      <button\n        className=\"btn-delete\"\n        onClick={deleteNominee.bind(null, movieInfo)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Nominee;\n","import React, { useState } from \"react\";\nimport fetchApiData from \"./Api.js\";\nimport Searchbar from \"./components/Searchbar/Searchbar.js\";\nimport SearchResults from \"./components/SearchResults/SearchResults.js\";\nimport Banner from \"./components/Banner/Banner.js\";\nimport Footer from \"./components/Footer/Footer.js\";\nimport \"./App.css\";\nimport Nominee from \"./components/Nominee/Nominee.js\";\n\nfunction App() {\n  const [nominees, setNominees] = useState(\n    JSON.parse(localStorage.getItem(\"nominees\")) || []\n  );\n  const [data, setData] = useState([]);\n  const [inputMovie, setInputMovie] = useState(\"\");\n\n  // Updates the api data\n  const getApiData = async (movieTitle) => {\n    let newData = await fetchApiData(movieTitle);\n    newData = newData || [];\n    setData(newData);\n  };\n\n  // Take in the new nominee obj and add the update state\n  const addNominee = (nominee) => {\n    if (nominees.length < 5) {\n      let newNominees = [...nominees];\n      newNominees.push(nominee);\n      setNominees(newNominees);\n\n      // Add the newly added nominees to the local storage\n      localStorage.setItem(\"nominees\", JSON.stringify(newNominees));\n    }\n  };\n\n  const deleteNominee = (nominee) => {\n    // ID to remove from the nominee list\n    const { imdbID } = nominee;\n    const newNominees = nominees.filter(\n      (nomineeObj) => nomineeObj.imdbID !== imdbID\n    );\n    setNominees(newNominees);\n\n    // Update the nominess in the browser's local storage\n    localStorage.setItem(\"nominees\", JSON.stringify(newNominees));\n  };\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">The Shoppies</h1>\n      <Searchbar getApiData={getApiData} setInputMovie={setInputMovie} />\n      {nominees.length === 5 ? <Banner /> : <></>}\n      <div className=\"content-container\">\n        <div className=\"main-container\">\n          <SearchResults\n            data={data}\n            addNominee={addNominee}\n            inputMovie={inputMovie}\n            nominees={nominees}\n          />\n          {/* <Search addNominee={addNominee} nominees={nominees} /> */}\n        </div>\n\n        <div className=\"nominee-container\">\n          <h2 className=\"title\">Nominations</h2>\n          {nominees.map((movie, indx) => (\n            <Nominee key={indx} {...movie} deleteNominee={deleteNominee} />\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}